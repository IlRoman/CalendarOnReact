{"version":3,"sources":["header/Header.jsx","redLine/RedLine.jsx","activeEvents/ActiveEvent.jsx","header/navigation/Day.jsx","header/navigation/Navigation.jsx","main/calendar/Cells.jsx","main/calendar/Rows.jsx","main/sidebar/Sidebar.jsx","main/Main.jsx","gateways/gateways.js","popup/Popup.jsx","App.jsx","index.jsx"],"names":["Header","currentDate","Date","getDate","className","onClick","props","showPopup","width","height","viewBox","fill","d","this","todayButton","getPrevWeek","getNextWeek","currentMonthAndYear","React","Component","RedLine","top","style","marginTop","ActiveEvent","getHeight","endTime","split","startTime","getPosition","backgroundColor","color","id","text","findMargin","Day","findActiveEvents","newArr","array","filter","event","startDate","getCurrentDay","map","key","Math","random","endDate","getMonday","setDate","index","getDayFunc","getDay","currentDayStyle","arr","Array","Navigation","elem","Cells","startOfWeek","moment","startOf","toDate","week","time","Rows","Sidebar","Main","baseUrl","getEventsList","fetch","then","response","json","Popup","handleChange","element","target","name","value","setState","createDate","alert","popupDate","endTimeArr","eventTime","join","date","state","newClass","closePopup","type","placeholder","onChange","cols","rows","delete","formData","method","headers","body","JSON","stringify","App","eventId","result","popup","catch","endOffWeek","endOf","eventDate","prevProps","prevState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.28f4f78d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.scss';\r\n\r\nclass Header extends React.Component {\r\n    currentDate = () => {\r\n        return new Date().getDate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <nav className=\"header-navbar\">\r\n                    <button className=\"create-button create-event\" onClick={() => this.props.showPopup('00:00', this.currentDate())}>\r\n                        <div className=\"button-create-event\">\r\n                            <svg className=\"create-event\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\r\n                                <path className=\"create-event\" fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\r\n                                <path className=\"create-event\" fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\r\n                                <path className=\"create-event\" fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\r\n                                <path className=\"create-event\" fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\r\n                                <path className=\"create-event\" fill=\"none\" d=\"M0 0h36v36H0z\"></path>\r\n                            </svg>\r\n                        </div>\r\n                        <span className=\"create-button__text create-event\">Create</span>\r\n                    </button>\r\n                    <button className=\"today-button\" onClick={this.props.todayButton}>\r\n                        Today\r\n                    </button>\r\n                    <div className=\"arrow-button\">\r\n                        <button className=\"arrow-button__prev button-style\" onClick={this.props.getPrevWeek}>\r\n                            <i className=\"material-icons arrow-button__size\">keyboard_arrow_left</i>\r\n                        </button>\r\n                        <button className=\"arrow-button__next button-style\" onClick={this.props.getNextWeek}>\r\n                            <i className=\"material-icons arrow-button__size \">keyboard_arrow_right</i>\r\n                        </button>\r\n                    </div>\r\n                    <span className=\"dates\">\r\n                        {this.props.currentMonthAndYear}\r\n                    </span>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './redline.scss';\r\n\r\nconst RedLine = ({ top }) => {\r\n    return (\r\n        <div className=\"redLine\" style={{ marginTop: `${+top + 100}px` }}>\r\n            <div className=\"redLine-round\"></div>\r\n            <div className=\"redLine-line\"></div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default RedLine;","import React from 'react';\r\nimport './activeEvent.scss'\r\n\r\nclass ActiveEvent extends React.Component {\r\n    getHeight = () => {\r\n        let a = +this.props.endTime.split(':')[0] - +this.props.startTime.split(':')[0]\r\n        let b = +this.props.endTime.split(':')[1] - +this.props.startTime.split(':')[1]\r\n        return (a * 60 + b)\r\n    }\r\n\r\n    getPosition = () => {\r\n        return +this.props.startTime.split(':')[0] * 60 + 100\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='active_event'\r\n                style={{\r\n                    height: this.getHeight(),\r\n                    backgroundColor: this.props.color,\r\n                    marginTop: this.getPosition()\r\n                }}\r\n                onClick={() => this.props.showPopup('00:00', '2020-02-02', this.props.id)}\r\n            >\r\n                {this.props.text}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActiveEvent;","import React from 'react'\r\nimport RedLine from '../../redLine/RedLine';\r\nimport ActiveEvent from '../../activeEvents/ActiveEvent'\r\n\r\nlet findMargin = (new Date() + '').split(' ')[4]\r\n\r\nclass Day extends React.Component {\r\n    findActiveEvents = () => {\r\n        let newArr = this.props.array.filter(event => new Date(event.startDate).getDate() === this.getCurrentDay().getDate())\r\n        newArr = newArr.filter(event => (new Date(event.startDate) + '').split(' ')[1] === (this.getCurrentDay() + '').split(' ')[1])\r\n        let activeEvents = newArr.map((event) => {\r\n            return (<ActiveEvent\r\n                key={Math.random()}\r\n                id={event.id}\r\n                color={event.color}\r\n                text={event.text}\r\n                startDate={event.startDate}\r\n                startTime={event.startTime}\r\n                endTime={event.endTime}\r\n                endDate={event.endDate}\r\n                showPopup={this.props.showPopup}\r\n            />)\r\n        })\r\n        return activeEvents\r\n    }\r\n\r\n    getCurrentDay = () => {\r\n        return new Date((this.props.getMonday()).setDate(this.props.getMonday().getDate() + this.props.index));\r\n    }\r\n\r\n    marginTop = () => {\r\n        return `${findMargin.split(':')[0] * 60 + +(findMargin.split(':')[1])}`\r\n    }\r\n\r\n    getDayFunc = () => {\r\n        return (new Date().getDate() === new Date(this.props.getMonday().setDate(this.props.getMonday().getDate() + this.props.index)).getDate() &&\r\n            new Date().getDay() === new Date(this.props.getMonday().setDate(this.props.getMonday().getDate() + this.props.index)).getDay()\r\n            ? <RedLine top={this.marginTop()} />\r\n            : ''\r\n        )\r\n    }\r\n\r\n    currentDayStyle = () => {\r\n        if ((this.getCurrentDay() + '').split(' ')[2] === (new Date() + '').split(' ')[2] &&\r\n            ((this.getCurrentDay() + '').split(' ')[0]) === (new Date() + '').split(' ')[0]) {\r\n            return 'current-day'\r\n        } else return ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"day\">\r\n                <div className=\"day-name\">{(this.getCurrentDay() + '').split(' ')[0]}</div>\r\n                <div className={`day-number ${this.currentDayStyle()}`}>{(this.getCurrentDay() + '').split(' ')[2]}</div>\r\n                {this.findActiveEvents()}\r\n                {this.getDayFunc()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Day;","import React from 'react';\r\nimport Header from '../Header';\r\nimport Day from './Day'\r\nimport './navigation.scss'\r\n\r\nlet arr = Array(7).fill('0');\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header\r\n                    getPrevWeek={this.props.getPrevWeek}\r\n                    getNextWeek={this.props.getNextWeek}\r\n                    todayButton={this.props.todayButton}\r\n                    showPopup={this.props.showPopup}\r\n                    currentMonthAndYear={this.props.currentMonthAndYear}\r\n                />\r\n                <nav className=\"days-navigation\">\r\n                    <div className=\"week\">\r\n                        {arr.map((elem, index) => {\r\n                            return (\r\n                                <Day\r\n                                    key={Math.random()}\r\n                                    array={this.props.array}\r\n                                    index={index}\r\n                                    getMonday={this.props.getMonday}\r\n                                    showPopup={this.props.showPopup}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </nav>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nlet arr = Array(7).fill('0');\r\n\r\nclass Cells extends React.Component {\r\n    getDate = () => {\r\n        let startOfWeek = moment().startOf('week').toDate();\r\n        return new Date(startOfWeek.setDate(startOfWeek.getDate() + this.props.week)).getDate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {arr.map((elem, index) => {\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            className='emptyCell'\r\n                            onClick={() => this.props.showPopup(this.props.time, this.getDate() + index)}\r\n                        />\r\n                    )\r\n                }\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cells;","import React from 'react';\r\nimport Cells from './Cells'\r\n\r\nlet arr = Array(24).fill('0');\r\n\r\nconst Rows = ({ week, showPopup }) => {\r\n\r\n    return (\r\n        <div className=\"calendar-visualization\">\r\n            {arr.map((elem, index) => {\r\n                return (\r\n                    < div className='emptyRow' key={Math.random()}>\r\n                        <Cells\r\n\r\n                            week={week}\r\n                            showPopup={showPopup}\r\n                            time={index < 10\r\n                                ? `0${index + 1}:00`\r\n                                : `${index + 1}:00`}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Rows;","import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n    let arr = Array(24).fill('0');\r\n\r\n    return (\r\n        <div className=\"timing\" key={Math.random()}>\r\n            {arr.map((elem, index) =>\r\n                elem = <div className=\"timing__blocks\" key={index}>\r\n                    <span className=\"clock\">\r\n                        {index + 1}\r\n                    </span>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport Rows from './calendar/Rows'\r\nimport Sidebar from './sidebar/Sidebar'\r\nimport './main.scss';\r\n\r\nconst Main = ({ week, showPopup }) => {\r\n    return (\r\n        <section className=\"main\">\r\n            <Sidebar />\r\n            <Rows week={week} showPopup={showPopup} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main;","const baseUrl = 'https://5e720541942d92001611a8f2.mockapi.io/api/v1/Calendar'\r\n\r\nexport const getEventsList = () => {\r\n    return fetch(baseUrl)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const postToServer = formData => {\r\n    return fetch(baseUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(formData)\r\n    })\r\n}\r\n\r\nexport const updateNewTask = (eventId, upDateEventData) => {\r\n    return fetch(`${baseUrl}/${eventId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(upDateEventData)\r\n    })\r\n}\r\n\r\nexport const deleteEvent = (eventId) => {\r\n    return fetch(`${baseUrl}/${eventId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n    })\r\n}\r\n","import React from 'react';\r\nimport './popup.scss';\r\nimport { postToServer } from '../gateways/gateways.js';\r\n\r\nclass Popup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: '#4183f1',\r\n            text: '',\r\n            startDate: '2020-02-26',\r\n            startTime: '00:00',\r\n            endTime: '00:00',\r\n            endDate: '2020-02-26',\r\n        }\r\n    }\r\n\r\n    handleChange = (element) => {\r\n        const { name, value } = element.target\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    createDate = () => {\r\n        alert(this.props.popupDate)\r\n    }\r\n\r\n    endTime = () => {\r\n        let endTimeArr = this.props.eventTime.split('')\r\n        if (+endTimeArr[1] === 9) {\r\n            endTimeArr[0] = +endTimeArr[0] + 1;\r\n            endTimeArr[1] = 0;\r\n        } else {\r\n            endTimeArr[1] = +endTimeArr[1] + 1;\r\n        }\r\n        return endTimeArr.join('')\r\n    }\r\n\r\n    startDate = (date) => {\r\n        return `2020-02-${date}`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={`popup ${this.props.newClass}`}>\r\n                <div className=\"popup__form\">\r\n                    <button className=\"close material-icons\" onClick={this.props.closePopup}>\r\n                        close\r\n                    </button>\r\n                    <input name=\"title\" className=\"input__name\" type=\"text\" placeholder=\"Add title\" />\r\n                    <div className=\"color-picker\">\r\n                        <label className=\"color-picker_label\">\r\n                            <span className=\"color-picker_label-text\">Select a color</span>\r\n                            <input className=\"event__color-picker\" type=\"color\" name=\"color\" value={this.state.color} onChange={this.handleChange} />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"date-block \">\r\n                        <i className=\"Tiny material-icons\">access_time</i>\r\n                        <input className=\"start-date input-style\" type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.handleChange} />\r\n                        <input type=\"time\" className=\"start-time time-list input-style \" name=\"startTime\" value={this.state.startTime} onChange={this.handleChange} />\r\n                        <input type=\"time\" className=\"end-time time-list input-style \" name=\"endTime\" value={this.state.endTime} onChange={this.handleChange} />\r\n                        <input className=\"end-date input-style\" type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"description \">\r\n                        <i className=\"Tiny material-icons \">format_align_left</i>\r\n                        <textarea className=\"description-input \" name=\"text\" cols=\"42 \" rows=\"4 \"\r\n                            placeholder=\"Add description\" onChange={this.handleChange} value={this.state.text}></textarea>\r\n                    </div>\r\n                    <div className=\"control \">\r\n                        <button\r\n                            className=\"delete-event\"\r\n                            onClick={() => this.props.delete(this.props.id)}\r\n                        >\r\n                            delete\r\n                        </button>\r\n                        <button\r\n                            className=\"submit-button \"\r\n                            onClick={() => {\r\n                                postToServer(this.state)\r\n                                    .then(this.props.closePopup());\r\n                            }}>\r\n                            Save\r\n                            </button>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popup;","import React from 'react';\nimport Navigation from './header/navigation/Navigation'\nimport Main from './main/Main'\nimport Popup from './popup/Popup';\nimport moment from 'moment';\nimport { getEventsList, deleteEvent } from './gateways/gateways'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            week: 0,\n            eventTime: '',\n            eventDate: '',\n            array: []\n        }\n    }\n\n    componentDidMount() {\n        getEventsList()\n            .then(result => {\n                this.setState({\n                    array: result\n                })\n            })\n            .catch(() => alert('Internal Server Error. Can\\'t display events'))\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.popup !== prevState.popup) {\n            getEventsList()\n                .then(result => {\n                    this.setState({\n                        array: result\n                    })\n                })\n                .catch(() => alert('Internal Server Error. Can\\'t display events'))\n        }\n    }\n\n    delete = (id) => {\n        deleteEvent(id)\n            .then(getEventsList()\n                .then(result => {\n                    this.setState({\n                        array: result,\n                        popup: !this.state.popup,\n                    })\n                })\n                .catch(() => alert('Internal Server Error. Can\\'t display events'))\n            )\n    }\n\n    getMonday = () => {\n        let startOfWeek = moment().startOf('week').toDate();\n        return new Date(startOfWeek.setDate(startOfWeek.getDate() + this.state.week));\n    }\n\n    getPrevWeek = () => {\n        this.setState({\n            week: this.state.week - 7,\n        })\n    }\n\n    getNextWeek = () => {\n        this.setState({\n            week: this.state.week + 7,\n        })\n    }\n\n    todayButton = () => {\n        this.setState({\n            week: 0,\n        })\n    }\n\n    currentMonthAndYear = () => {\n        let startOfWeek = moment().startOf('week').toDate();\n        startOfWeek = new Date(startOfWeek.setDate(startOfWeek.getDate() + this.state.week)) + ''\n        let endOffWeek = moment().endOf('week').toDate();\n        endOffWeek = new Date(endOffWeek.setDate(endOffWeek.getDate() + this.state.week)) + ''\n        return `${startOfWeek.split(' ')[1]} ${startOfWeek.split(' ')[3]} - ${endOffWeek.split(' ')[1]} ${endOffWeek.split(' ')[3]}`\n    }\n\n    showPopup = (time, date, id) => {\n        this.setState({\n            popup: !this.state.popup,\n            eventTime: time,\n            eventDate: date,\n            id: id,\n        })\n    }\n\n    closePopup = () => {\n        this.setState({\n            popup: !this.state.popup,\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Navigation\n                    array={this.state.array}\n                    getMonday={this.getMonday}\n                    showPopup={this.showPopup}\n                    getPrevWeek={this.getPrevWeek}\n                    getNextWeek={this.getNextWeek}\n                    todayButton={this.todayButton}\n                    currentMonthAndYear={this.currentMonthAndYear()}\n                />\n                <Main week={this.state.week} showPopup={this.showPopup} />\n                {this.state.popup && <Popup\n                    closePopup={this.closePopup}\n                    eventTime={this.state.eventTime}\n                    eventDate={this.state.eventDate}\n                    id={this.state.id}\n                    delete={this.delete}\n                />}\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}