{"version":3,"sources":["header/Header.jsx","redLine/RedLine.jsx","activeEvents/ActiveEvent.jsx","header/navigation/Day.jsx","header/navigation/Navigation.jsx","main/calendar/Cells.jsx","main/calendar/Rows.jsx","main/sidebar/Sidebar.jsx","main/Main.jsx","popup/Popup.jsx","gateways/gateways.js","App.jsx","index.jsx"],"names":["Header","currentDate","Date","getDate","className","onClick","props","showPopup","width","height","viewBox","fill","d","this","todayButton","getPrevWeek","getNextWeek","currentMonthAndYear","React","Component","RedLine","top","style","marginTop","ActiveEvent","getHeight","endTime","split","startTime","getPosition","console","log","backgroundColor","color","id","title","description","findMargin","Day","findActiveEvents","newArr","array","filter","event","startDate","getCurrentDay","map","key","endDate","getMonday","setDate","index","getDayFunc","getDay","currentDayStyle","arr","Array","Navigation","elem","Math","random","Cells","startOfWeek","moment","startOf","toDate","week","time","Rows","Sidebar","Main","Popup","handleChange","element","target","name","value","setState","createDate","alert","popupDate","endTimeArr","eventTime","join","date","state","newClass","closePopup","type","placeholder","onChange","cols","rows","delete","createTask","baseUrl","getEventsList","fetch","then","response","json","App","formData","method","headers","body","JSON","stringify","postToServer","result","popup","catch","eventId","getActualDate","eventDate","month","getMonth","endOffWeek","endOf","prevProps","prevState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d56bc34d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.scss';\r\n\r\nclass Header extends React.Component {\r\n    currentDate = () => {\r\n        return new Date().getDate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <nav className=\"header-navbar\">\r\n                    <button className=\"create-button create-event\" onClick={() => this.props.showPopup('00:00', this.currentDate())}>\r\n                        <div className=\"button-create-event\">\r\n                            <svg className=\"create-event\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\r\n                                <path className=\"create-event\" fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\r\n                                <path className=\"create-event\" fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\r\n                                <path className=\"create-event\" fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\r\n                                <path className=\"create-event\" fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\r\n                                <path className=\"create-event\" fill=\"none\" d=\"M0 0h36v36H0z\"></path>\r\n                            </svg>\r\n                        </div>\r\n                        <span className=\"create-button__text create-event\">Create</span>\r\n                    </button>\r\n                    <button className=\"today-button\" onClick={this.props.todayButton}>\r\n                        Today\r\n                    </button>\r\n                    <div className=\"arrow-button\">\r\n                        <button className=\"arrow-button__prev button-style\" onClick={this.props.getPrevWeek}>\r\n                            <i className=\"material-icons arrow-button__size\">keyboard_arrow_left</i>\r\n                        </button>\r\n                        <button className=\"arrow-button__next button-style\" onClick={this.props.getNextWeek}>\r\n                            <i className=\"material-icons arrow-button__size \">keyboard_arrow_right</i>\r\n                        </button>\r\n                    </div>\r\n                    <span className=\"dates\">\r\n                        {this.props.currentMonthAndYear}\r\n                    </span>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './redline.scss';\r\n\r\nconst RedLine = ({ top }) => {\r\n    return (\r\n        <div className=\"redLine\" style={{ marginTop: `${+top + 100}px` }}>\r\n            <div className=\"redLine-round\"></div>\r\n            <div className=\"redLine-line\"></div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default RedLine;","import React from 'react';\r\nimport './activeEvent.scss'\r\n\r\nclass ActiveEvent extends React.Component {\r\n    getHeight = () => {\r\n        let a = +this.props.endTime.split(':')[0] - +this.props.startTime.split(':')[0]\r\n        let b = +this.props.endTime.split(':')[1] - +this.props.startTime.split(':')[1]\r\n        return (a * 60 + b)\r\n    }\r\n\r\n    getPosition = () => {\r\n        console.log(this.props)\r\n        return +this.props.startTime.split(':')[0] * 60 + 100\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='active_event'\r\n                style={{\r\n                    height: this.getHeight(),\r\n                    backgroundColor: this.props.color,\r\n                    marginTop: this.getPosition()\r\n                }}\r\n                onClick={() => this.props.showPopup('00:00', '2020-02-02', this.props.id)}\r\n            >\r\n                {this.props.title}\r\n                <p>{this.props.description}</p>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActiveEvent;","import React from 'react'\r\nimport RedLine from '../../redLine/RedLine';\r\nimport ActiveEvent from '../../activeEvents/ActiveEvent'\r\n\r\nlet findMargin = (new Date() + '').split(' ')[4]\r\n\r\nclass Day extends React.Component {\r\n    findActiveEvents = () => {\r\n        let newArr = this.props.array.filter(event => new Date(event.startDate).getDate() === this.getCurrentDay().getDate())\r\n        newArr = newArr.filter(event => (new Date(event.startDate) + '').split(' ')[1] === (this.getCurrentDay() + '').split(' ')[1])\r\n        let activeEvents = newArr.map((event) => {\r\n            return (<ActiveEvent\r\n                key={event.id}\r\n                id={event.id}\r\n                color={event.color}\r\n                title={event.title}\r\n                description={event.description}\r\n                startDate={event.startDate}\r\n                startTime={event.startTime}\r\n                endTime={event.endTime}\r\n                endDate={event.endDate}\r\n                showPopup={this.props.showPopup}\r\n            />)\r\n        })\r\n        return activeEvents\r\n    }\r\n\r\n    getCurrentDay = () => {\r\n        return new Date((this.props.getMonday()).setDate(this.props.getMonday().getDate() + this.props.index));\r\n    }\r\n\r\n    marginTop = () => {\r\n        return `${findMargin.split(':')[0] * 60 + +(findMargin.split(':')[1])}`\r\n    }\r\n\r\n    getDayFunc = () => {\r\n        return (new Date().getDate() === new Date(this.props.getMonday().setDate(this.props.getMonday().getDate() + this.props.index)).getDate() &&\r\n            new Date().getDay() === new Date(this.props.getMonday().setDate(this.props.getMonday().getDate() + this.props.index)).getDay()\r\n            ? <RedLine top={this.marginTop()} />\r\n            : ''\r\n        )\r\n    }\r\n\r\n    currentDayStyle = () => {\r\n        if ((this.getCurrentDay() + '').split(' ')[2] === (new Date() + '').split(' ')[2] &&\r\n            ((this.getCurrentDay() + '').split(' ')[0]) === (new Date() + '').split(' ')[0]) {\r\n            return 'current-day'\r\n        } else return ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"day\">\r\n                <div className=\"day-name\">{(this.getCurrentDay() + '').split(' ')[0]}</div>\r\n                <div className={`day-number ${this.currentDayStyle()}`}>{(this.getCurrentDay() + '').split(' ')[2]}</div>\r\n                {this.findActiveEvents()}\r\n                {this.getDayFunc()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Day;","import React from 'react';\r\nimport Header from '../Header';\r\nimport Day from './Day'\r\nimport './navigation.scss'\r\n\r\nlet arr = Array(7).fill('0');\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header\r\n                    getPrevWeek={this.props.getPrevWeek}\r\n                    getNextWeek={this.props.getNextWeek}\r\n                    todayButton={this.props.todayButton}\r\n                    showPopup={this.props.showPopup}\r\n                    currentMonthAndYear={this.props.currentMonthAndYear}\r\n                />\r\n                <nav className=\"days-navigation\">\r\n                    <div className=\"week\">\r\n                        {arr.map((elem, index) => {\r\n                            return (\r\n                                <Day\r\n                                    key={Math.random()}\r\n                                    array={this.props.array}\r\n                                    index={index}\r\n                                    getMonday={this.props.getMonday}\r\n                                    showPopup={this.props.showPopup}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </nav>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nlet arr = Array(7).fill('0');\r\n\r\nclass Cells extends React.Component {\r\n    getDate = (index) => {\r\n        let startOfWeek = moment().startOf('week').toDate();\r\n        startOfWeek = new Date(startOfWeek.setDate(startOfWeek.getDate() + this.props.week + index)).getDate();\r\n        this.props.showPopup(this.props.time, startOfWeek, '', index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {arr.map((elem, index) => {\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            className='emptyCell'\r\n                            onClick={() => this.getDate(index)}\r\n                        />\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cells;","import React from 'react';\r\nimport Cells from './Cells'\r\n\r\nlet arr = Array(24).fill('0');\r\n\r\nconst Rows = ({ week, showPopup }) => {\r\n\r\n    return (\r\n        <div className=\"calendar-visualization\">\r\n            {arr.map((elem, index) => {\r\n                return (\r\n                    < div className='emptyRow' key={Math.random()}>\r\n                        <Cells\r\n\r\n                            week={week}\r\n                            showPopup={showPopup}\r\n                            time={index < 10\r\n                                ? `0${index + 1}:00`\r\n                                : `${index + 1}:00`}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Rows;","import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n    let arr = Array(24).fill('0');\r\n\r\n    return (\r\n        <div className=\"timing\" key={Math.random()}>\r\n            {arr.map((elem, index) =>\r\n                elem = <div className=\"timing__blocks\" key={index}>\r\n                    <span className=\"clock\">\r\n                        {index + 1}\r\n                    </span>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport Rows from './calendar/Rows'\r\nimport Sidebar from './sidebar/Sidebar'\r\nimport './main.scss';\r\n\r\nconst Main = ({ week, showPopup }) => {\r\n    return (\r\n        <section className=\"main\">\r\n            <Sidebar />\r\n            <Rows week={week} showPopup={showPopup} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './popup.scss';\r\n\r\nclass Popup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: '#4183f1',\r\n            title: '',\r\n            description: '',\r\n            startDate: this.props.date,\r\n            startTime: this.props.eventTime,\r\n            endTime: this.props.eventTime,\r\n            endDate: this.props.date\r\n        }\r\n    }\r\n\r\n    handleChange = (element) => {\r\n        const { name, value } = element.target\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    createDate = () => {\r\n        alert(this.props.popupDate)\r\n    }\r\n\r\n    endTime = () => {\r\n        let endTimeArr = this.props.eventTime.split('')\r\n        if (+endTimeArr[1] === 9) {\r\n            endTimeArr[0] = +endTimeArr[0] + 1;\r\n            endTimeArr[1] = 0;\r\n        } else {\r\n            endTimeArr[1] = +endTimeArr[1] + 1;\r\n        }\r\n        return endTimeArr.join('')\r\n    }\r\n\r\n    startDate = (date) => {\r\n        return `2020-02-${date}`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={`popup ${this.props.newClass}`}>\r\n                <div className=\"popup__form\">\r\n                    <button className=\"close material-icons\" onClick={this.props.closePopup}>\r\n                        close\r\n                    </button>\r\n                    <input name=\"title\" className=\"input__name\" type=\"text\" placeholder=\"Add title\" value={this.state.title} onChange={this.handleChange} />\r\n                    <div className=\"color-picker\">\r\n                        <label className=\"color-picker_label\">\r\n                            <span className=\"color-picker_label-text\">Select a color</span>\r\n                            <input className=\"event__color-picker\" type=\"color\" name=\"color\" value={this.state.color} onChange={this.handleChange} />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"date-block \">\r\n                        <i className=\"Tiny material-icons\">access_time</i>\r\n                        <input className=\"start-date input-style\" type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.handleChange} />\r\n                        <input type=\"time\" className=\"start-time time-list input-style \" name=\"startTime\" value={this.state.startTime} onChange={this.handleChange} />\r\n                        <input type=\"time\" className=\"end-time time-list input-style \" name=\"endTime\" value={this.state.endTime} onChange={this.handleChange} />\r\n                        <input className=\"end-date input-style\" type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"description \">\r\n                        <i className=\"Tiny material-icons \">format_align_left</i>\r\n                        <textarea\r\n                            className=\"description-input \"\r\n                            name=\"description\"\r\n                            cols=\"42 \"\r\n                            rows=\"4 \"\r\n                            placeholder=\"Add description\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.description}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"control \">\r\n                        <button\r\n                            className=\"delete-event\"\r\n                            onClick={() => this.props.delete(this.props.id)}\r\n                        >\r\n                            delete\r\n                        </button>\r\n                        <button\r\n                            className=\"submit-button \"\r\n                            onClick={() => this.props.createTask(this.state)}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popup;","const baseUrl = 'https://5e720541942d92001611a8f2.mockapi.io/api/v1/Calendar'\r\n\r\nexport const getEventsList = () => {\r\n    return fetch(baseUrl)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const postToServer = formData => {\r\n    return fetch(baseUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(formData)\r\n    })\r\n}\r\n\r\nexport const updateNewTask = (eventId, upDateEventData) => {\r\n    return fetch(`${baseUrl}/${eventId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n        body: JSON.stringify(upDateEventData)\r\n    })\r\n}\r\n\r\nexport const deleteEvent = (eventId) => {\r\n    return fetch(`${baseUrl}/${eventId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n        },\r\n    })\r\n}\r\n","import React from 'react';\nimport Navigation from './header/navigation/Navigation'\nimport Main from './main/Main'\nimport Popup from './popup/Popup';\nimport moment from 'moment';\nimport { getEventsList, deleteEvent, postToServer } from './gateways/gateways'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            week: 0,\n            eventTime: '',\n            eventDate: '',\n            array: [],\n            date: '',\n        }\n    }\n\n    componentDidMount() {\n        getEventsList()\n            .then(result => {\n                this.setState({\n                    array: result\n                })\n            })\n            .catch(() => alert('Internal Server Error. Can\\'t display events'))\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.popup !== prevState.popup) {\n            getEventsList()\n                .then(result => {\n                    this.setState({\n                        array: result\n                    })\n                })\n                .catch(() => alert('Internal Server Error. Can\\'t display events'))\n        }\n    }\n\n    createTask = (formData) => {\n        postToServer(formData)\n            .then(getEventsList()\n                .then(result => {\n                    this.setState({\n                        array: result,\n                        popup: !this.state.popup,\n                    })\n                })\n                .catch(() => alert('Internal Server Error. Can\\'t display events'))\n            )\n    }\n\n    delete = (id) => {\n        deleteEvent(id)\n            .then(getEventsList()\n                .then(result => {\n                    this.setState({\n                        array: result,\n                        popup: !this.state.popup,\n                    })\n                })\n                .catch(() => alert('Internal Server Error. Can\\'t display events'))\n            )\n    }\n\n    getMonday = () => {\n        let startOfWeek = moment().startOf('week').toDate();\n        return new Date(startOfWeek.setDate(startOfWeek.getDate() + this.state.week));\n    }\n\n    getActualDate = (eventDate, index) => {\n        let startOfWeek = moment().startOf('week').toDate();\n        let date = new Date(startOfWeek.setDate(startOfWeek.getDate() + this.state.week + index)) + ''\n        let month = new Date(date).getMonth() + 1\n        return `${date.split(' ')[3]}-${month <= 9 ? \"0\" + month : month}-${eventDate}`\n    }\n\n    getPrevWeek = () => {\n        this.setState({\n            week: this.state.week - 7,\n            date: this.getActualDate(this.state.eventDate, 0)\n        })\n    }\n\n    getNextWeek = () => {\n        this.setState({\n            week: this.state.week + 7,\n            date: this.getActualDate(this.state.eventDate, 0),\n        })\n    }\n\n    todayButton = () => {\n        this.setState({\n            week: 0,\n        })\n    }\n\n    currentMonthAndYear = () => {\n        let startOfWeek = moment().startOf('week').toDate();\n        startOfWeek = new Date(startOfWeek.setDate(startOfWeek.getDate() + this.state.week)) + ''\n        let endOffWeek = moment().endOf('week').toDate();\n        endOffWeek = new Date(endOffWeek.setDate(endOffWeek.getDate() + this.state.week)) + ''\n        return `${startOfWeek.split(' ')[1]} ${startOfWeek.split(' ')[3]} - ${endOffWeek.split(' ')[1]} ${endOffWeek.split(' ')[3]}`\n    }\n\n    showPopup = (time, date, id, index) => {\n        const eventDate = date <= 9 ? `0${date}` : date;\n        const eventTime = time === '010:00' ? '10:00' : time\n        this.setState({\n            date: this.getActualDate(eventDate, index),\n            eventDate,\n            eventTime,\n            id: id,\n            popup: !this.state.popup,\n        })\n    }\n\n    closePopup = () => {\n        this.setState({\n            popup: !this.state.popup,\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Navigation\n                    array={this.state.array}\n                    getMonday={this.getMonday}\n                    showPopup={this.showPopup}\n                    getPrevWeek={this.getPrevWeek}\n                    getNextWeek={this.getNextWeek}\n                    todayButton={this.todayButton}\n                    currentMonthAndYear={this.currentMonthAndYear()}\n                />\n                <Main week={this.state.week} showPopup={this.showPopup} />\n                {this.state.popup && <Popup\n                    createTask={this.createTask}\n                    eventTime={this.state.eventTime}\n                    id={this.state.id}\n                    delete={this.delete}\n                    date={this.state.date}\n                    closePopup={this.closePopup}\n                />}\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}